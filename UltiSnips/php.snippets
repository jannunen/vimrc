snippet sqle "Insert SQL execute" b
  \$r=\$db->Execute(\$sql${1: ,array(${2:some_var})}) or die (Utils::show_error_arr(array(__CLASS__,__FUNCTION__,__LINE__),\$db->errorMsg(),\$sql));$0
endsnippet

snippet lsql "Walk through resultset" b
  $rows = array();
  if ($r && $r->RowCount() > 0) { 
    while (!$r->EOF) { 
      $row=$r->getRowAssoc(false);
      $rows[] = $row; 
      $r->MoveNext(); 
  }
}
$0
endsnippet

snippet aesql "ADODB Autoexecute SQL" b
$db->autoExecute("${1:table_name}",${2:array_name},'${3:UPDATE}',${4:" id=\$id"});
endsnippet

snippet smrfs "Smarty fetch string" 
$smarty->fetch("string:##${1:text_to_insert}##");
endsnippet	

snippet smrf "Smarty fetch template file" 
$smarty->fetch('${1:template.tpl}');
endsnippet	

snippet smrt "Smarty Singleton get" b
$smarty = Singleton::getSmarty();
endsnippet  

snippet globals "Globals" b
global $db,$tbl_prefix,$askey,$ic,$def_db;
endsnippet

snippet ifsql "If row exists" b
if ($r && $r->RowCount() > 0) {
  $0
endsnippet

snippet rr "Return rows" b
return $rows;
endsnippet

snippet ra "Return associative array" b
$row = $r->getRowAssoc(false);
endsnippet

snippet dbce "Database close and exit" b
$db->Close();exit();
endsnippet

snippet dbd "db debug" b
$db->debug=true;
endsnippet

snippet smra "Smarty assign" b
$smarty->assign('${1:varname}',\$$1);
endsnippet

snippet mc "Get memcaced" b
$mc = Singleton::getMemcached();
endsnippet

snippet gic "Get phpfastcache" i 
global $ic;
endsnippet

snippet icdel "delete phpfastcache key" i
$ic->deleteItem($key);
endsnippet


snippet ific "Get phpfastcache key" b
$cached = $ic->getItem($key);
if ($cached->get()==null) {
  $0
  $cached->set($rows)->expiresAfter($GLOBALS['ic_expiremedium']);
  $ic->save($cached);
} else {
  $rows = $cached->get();
}
endsnippet


snippet ifmc "Get memacched key" b
$key = $def_db."${1:key}";
$rows = $mc->get($key);
// When this should result an array almost every time, use this...
if ($mc->getResultCode() == Memcached::RES_NOTFOUND) {
  $0
  $mc->set($key,$rows,3600);
}
endsnippet

snippet mset "Set memcached" b
$mc->set($key,$rows,3600);
endsnippet

snippet mdel "Memcached delete" b
$mc->delete($key);
endsnippet

snippet keyc "Keychanged" i
$key = $this->keyChanged("${1:class::func}",array('${2:var}'=>${3:val}));
endsnippet

snippet aexi	"Inserts autoexecute insert" b
\$db->autoExecute("${1:table}",\$row,'INSERT');
endsnippet

snippet aexu "Inserts autoexecute update" b
\$db->autoExecute("${1:table}",${2:row},'UPDATE'," id = {\$id}");
endsnippet

snippet bT "Insert begin transtion" b
\$db->beginTrans();
endsnippet

snippet cT "Insert commit transtion" b
\$db->commitTrans();
endsnippet

snippet ii "Get db_insert_id" b
\$id=\$db->insert_id();
endsnippet
